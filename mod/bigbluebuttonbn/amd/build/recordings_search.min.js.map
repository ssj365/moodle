{"version":3,"file":"recordings_search.min.js","sources":["../src/recordings_search.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Search filter for recordings table.\n *\n * @module     mod_bigbluebuttonbn/recordings_search\n * @copyright  2025 Blindside Networks\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Filters the recordings table by text input across all columns.\n */\nexport const setupSearch = () => {\n    const searchInput = document.getElementById(\"recordings-search-input\");\n    const searchButton = document.getElementById(\"recordings-search-button\");\n    const tableContainer = document.querySelector(\".mod_bigbluebuttonbn_recordings_table\");\n\n    if (!searchInput || !searchButton || !tableContainer) {\n        return;\n    }\n\n    const rows = Array.from(tableContainer.querySelectorAll(\".row.mb-3.align-items-center\"));\n\n    const filterRows = () => {\n        const query = searchInput.value.trim().toLowerCase();\n\n        rows.forEach(row => {\n            const text = row.textContent.toLowerCase();\n            const match = query === \"\" || text.includes(query);\n            row.dataset.filtered = match ? \"true\" : \"false\";\n        });\n\n        window.currentPage = 1;\n        if (typeof window.updatePagination === 'function') {\n            window.updatePagination();\n        }\n    };\n\n    searchButton.addEventListener(\"click\", () => {\n        filterRows();\n    });\n\n    searchInput.addEventListener(\"keydown\", (e) => {\n        if (e.key === \"Enter\") {\n            filterRows();\n        }\n    });\n\n    // Initialize filtered state to ensure first load behaves correctly.\n    rows.forEach(row => {\n        row.dataset.filtered = \"true\";\n    });\n};\n"],"names":["searchInput","document","getElementById","searchButton","tableContainer","querySelector","rows","Array","from","querySelectorAll","filterRows","query","value","trim","toLowerCase","forEach","row","text","textContent","match","includes","dataset","filtered","window","currentPage","updatePagination","addEventListener","e","key"],"mappings":"wLA0B2B,WACjBA,YAAcC,SAASC,eAAe,2BACtCC,aAAeF,SAASC,eAAe,4BACvCE,eAAiBH,SAASI,cAAc,6CAEzCL,cAAgBG,eAAiBC,4BAIhCE,KAAOC,MAAMC,KAAKJ,eAAeK,iBAAiB,iCAElDC,WAAa,WACTC,MAAQX,YAAYY,MAAMC,OAAOC,cAEvCR,KAAKS,SAAQC,YACHC,KAAOD,IAAIE,YAAYJ,cACvBK,MAAkB,KAAVR,OAAgBM,KAAKG,SAAST,OAC5CK,IAAIK,QAAQC,SAAWH,MAAQ,OAAS,WAG5CI,OAAOC,YAAc,EACkB,mBAA5BD,OAAOE,kBACdF,OAAOE,oBAIftB,aAAauB,iBAAiB,SAAS,KACnChB,gBAGJV,YAAY0B,iBAAiB,WAAYC,IACvB,UAAVA,EAAEC,KACFlB,gBAKRJ,KAAKS,SAAQC,MACTA,IAAIK,QAAQC,SAAW"}